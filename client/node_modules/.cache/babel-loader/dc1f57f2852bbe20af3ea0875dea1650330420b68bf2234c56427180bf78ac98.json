{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Full stack home test\\\\client\\\\src\\\\components\\\\CandidateList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function CandidateList() {\n//   const [candidates, setCandidates] = useState([]);\n//   const [filteredCandidates, setFilteredCandidates] = useState([]);\n//   const [languages, setLanguages] = useState([]);\n//   const [languageFilter, setLanguageFilter] = useState(\"\");\n//   const [experienceFilter, setExperienceFilter] = useState(\"\");\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:7000/candidates\")\n//       .then((response) => {\n//         setCandidates(response.data.candidates);\n//         setLanguages(response.data.languages);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   }, []);\n\n//   useEffect(() => {\n//     // Filter candidates by language and experience level\n//     let filtered = candidates.filter((candidate) => {\n//       let languageMatches = false;\n//       let experienceMatches = false;\n\n//       if (languageFilter) {\n//         languageMatches = candidate.languages.some(\n//           (language) => language == languageFilter\n//         );\n//       } else {\n//         languageMatches = true;\n//       }\n\n//       if (experienceFilter === \"junior\") {\n//         experienceMatches =\n//           !candidate.beginYear ||\n//           new Date().getFullYear() - candidate.beginYear < 3;\n//       } else if (experienceFilter === \"senior\") {\n//         experienceMatches =\n//           candidate.beginYear &&\n//           new Date().getFullYear() - candidate.beginYear >= 3;\n//       } else {\n//         experienceMatches = true;\n//       }\n\n//       return languageMatches && experienceMatches;\n//     });\n\n//     // Sort candidates by last update date in descending order\n//     filtered.sort(\n//       (a, b) => new Date(b.lastUpdateDate) - new Date(a.lastUpdateDate)\n//     );\n\n//     setFilteredCandidates(filtered);\n//   }, [candidates, languageFilter, experienceFilter]);\n\n//   return (\n//     <div>\n//       <h1>Candidates</h1>\n//       <div>\n//         <label>\n//           Language:\n//           <select\n//             value={languageFilter}\n//             onChange={(e) => {\n//               setLanguageFilter(e.target.value);\n//             }}\n//           >\n//             <option value=\"\">All</option>\n//             {languages.map((language) => (\n//               <option key={language.id} value={language.id}>\n//                 {language.name}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         <label>\n//           Experience:\n//           <select\n//             value={experienceFilter}\n//             onChange={(e) => setExperienceFilter(e.target.value)}\n//           >\n//             <option value=\"\">All</option>\n//             <option value=\"junior\">Junior</option>\n//             <option value=\"senior\">Senior</option>\n//           </select>\n//         </label>\n//       </div>\n//       <ul>\n//         {filteredCandidates.map((candidate) => (\n//           <li key={candidate.id}>{candidate.name}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default CandidateList;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AppBar, Toolbar, Typography, TextField, Grid, Select, MenuItem, FormControl, InputLabel, Card, CardContent, CardActions, Button, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  card: {\n    margin: theme.spacing(2)\n  }\n}));\nfunction CandidateList() {\n  _s();\n  const classes = useStyles();\n  const [candidates, setCandidates] = useState([]);\n  const [filteredCandidates, setFilteredCandidates] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [languageFilter, setLanguageFilter] = useState(\"\");\n  const [experienceFilter, setExperienceFilter] = useState(\"\");\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:7000/candidates\").then(response => {\n      setCandidates(response.data.candidates);\n      setLanguages(response.data.languages);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    // Filter candidates by language, experience level, and search query\n    /*\r\n      I chose to implement filtering and sorting on the client side.\r\n      This is because the amount of data is relatively small and can be easily handled by the customer. However, if the amount of data is large, it may be more efficient to implement server-side filtering and sorting to reduce the amount of data that must be transferred to the client.\r\n      */\n    let filtered = candidates.filter(candidate => {\n      let languageMatches = false;\n      let experienceMatches = false;\n      let searchMatches = false;\n      if (languageFilter) {\n        languageMatches = candidate.languages.some(language => language.id === languageFilter);\n      } else {\n        languageMatches = true;\n      }\n      if (experienceFilter === \"junior\") {\n        experienceMatches = !candidate.beginYear || new Date().getFullYear() - candidate.beginYear < 3;\n      } else if (experienceFilter === \"senior\") {\n        experienceMatches = candidate.beginYear && new Date().getFullYear() - candidate.beginYear >= 3;\n      } else {\n        experienceMatches = true;\n      }\n      if (searchFilter) {\n        searchMatches = candidate.name.toLowerCase().includes(searchFilter.toLowerCase());\n      } else {\n        searchMatches = true;\n      }\n      return languageMatches && experienceMatches && searchMatches;\n    });\n\n    // Sort candidates by last update date in descending order\n    filtered.sort((a, b) => new Date(b.lastUpdateDate) - new Date(a.lastUpdateDate));\n    setFilteredCandidates(filtered);\n  }, [candidates, languageFilter, experienceFilter, searchFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"Candidate List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search\",\n          variant: \"outlined\",\n          size: \"small\",\n          onChange: e => setSearchFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"language-filter-label\",\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"language-filter-label\",\n            id: \"language-filter\",\n            value: languageFilter,\n            onChange: e => setLanguageFilter(e.target.value),\n            label: \"Language\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), languages.map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: language.id,\n              children: language.name\n            }, language.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"experience-filter-label\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"experience-filter-label\",\n            id: \"experience-filter\",\n            value: experienceFilter,\n            onChange: e => setExperienceFilter(e.target.value),\n            label: \"Experience\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"junior\",\n              children: \"Junior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"senior\",\n              children: \"Senior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: filteredCandidates.map(candidate => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h2\",\n              children: candidate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              children: candidate.languages.map(language => language.name).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              children: candidate.beginYear ? `Experience: ${new Date().getFullYear() - candidate.beginYear} years` : \"No experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"primary\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, candidate.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(CandidateList, \"zt4FMPc/OqFnLJoa40wauvUPm48=\", false, function () {\n  return [useStyles];\n});\n_c = CandidateList;\nexport default CandidateList;\nvar _c;\n$RefreshReg$(_c, \"CandidateList\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppBar","Toolbar","Typography","TextField","Grid","Select","MenuItem","FormControl","InputLabel","Card","CardContent","CardActions","Button","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","root","flexGrow","title","formControl","margin","spacing","minWidth","card","CandidateList","_s","classes","candidates","setCandidates","filteredCandidates","setFilteredCandidates","languages","setLanguages","languageFilter","setLanguageFilter","experienceFilter","setExperienceFilter","searchFilter","setSearchFilter","get","then","response","data","catch","error","console","filtered","filter","candidate","languageMatches","experienceMatches","searchMatches","some","language","id","beginYear","Date","getFullYear","name","toLowerCase","includes","sort","a","b","lastUpdateDate","className","children","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","size","onChange","e","target","value","container","justify","item","labelId","map","xs","sm","md","component","color","join","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Full stack home test/client/src/components/CandidateList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function CandidateList() {\r\n//   const [candidates, setCandidates] = useState([]);\r\n//   const [filteredCandidates, setFilteredCandidates] = useState([]);\r\n//   const [languages, setLanguages] = useState([]);\r\n//   const [languageFilter, setLanguageFilter] = useState(\"\");\r\n//   const [experienceFilter, setExperienceFilter] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:7000/candidates\")\r\n//       .then((response) => {\r\n//         setCandidates(response.data.candidates);\r\n//         setLanguages(response.data.languages);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//       });\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Filter candidates by language and experience level\r\n//     let filtered = candidates.filter((candidate) => {\r\n//       let languageMatches = false;\r\n//       let experienceMatches = false;\r\n\r\n//       if (languageFilter) {\r\n//         languageMatches = candidate.languages.some(\r\n//           (language) => language == languageFilter\r\n//         );\r\n//       } else {\r\n//         languageMatches = true;\r\n//       }\r\n\r\n//       if (experienceFilter === \"junior\") {\r\n//         experienceMatches =\r\n//           !candidate.beginYear ||\r\n//           new Date().getFullYear() - candidate.beginYear < 3;\r\n//       } else if (experienceFilter === \"senior\") {\r\n//         experienceMatches =\r\n//           candidate.beginYear &&\r\n//           new Date().getFullYear() - candidate.beginYear >= 3;\r\n//       } else {\r\n//         experienceMatches = true;\r\n//       }\r\n\r\n//       return languageMatches && experienceMatches;\r\n//     });\r\n\r\n//     // Sort candidates by last update date in descending order\r\n//     filtered.sort(\r\n//       (a, b) => new Date(b.lastUpdateDate) - new Date(a.lastUpdateDate)\r\n//     );\r\n\r\n//     setFilteredCandidates(filtered);\r\n//   }, [candidates, languageFilter, experienceFilter]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Candidates</h1>\r\n//       <div>\r\n//         <label>\r\n//           Language:\r\n//           <select\r\n//             value={languageFilter}\r\n//             onChange={(e) => {\r\n//               setLanguageFilter(e.target.value);\r\n//             }}\r\n//           >\r\n//             <option value=\"\">All</option>\r\n//             {languages.map((language) => (\r\n//               <option key={language.id} value={language.id}>\r\n//                 {language.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         <label>\r\n//           Experience:\r\n//           <select\r\n//             value={experienceFilter}\r\n//             onChange={(e) => setExperienceFilter(e.target.value)}\r\n//           >\r\n//             <option value=\"\">All</option>\r\n//             <option value=\"junior\">Junior</option>\r\n//             <option value=\"senior\">Senior</option>\r\n//           </select>\r\n//         </label>\r\n//       </div>\r\n//       <ul>\r\n//         {filteredCandidates.map((candidate) => (\r\n//           <li key={candidate.id}>{candidate.name}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CandidateList;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  card: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction CandidateList() {\r\n  const classes = useStyles();\r\n\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [filteredCandidates, setFilteredCandidates] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [languageFilter, setLanguageFilter] = useState(\"\");\r\n  const [experienceFilter, setExperienceFilter] = useState(\"\");\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:7000/candidates\")\r\n      .then((response) => {\r\n        setCandidates(response.data.candidates);\r\n        setLanguages(response.data.languages);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter candidates by language, experience level, and search query\r\n    /*\r\n      I chose to implement filtering and sorting on the client side.\r\n      This is because the amount of data is relatively small and can be easily handled by the customer. However, if the amount of data is large, it may be more efficient to implement server-side filtering and sorting to reduce the amount of data that must be transferred to the client.\r\n      */\r\n    let filtered = candidates.filter((candidate) => {\r\n      let languageMatches = false;\r\n      let experienceMatches = false;\r\n      let searchMatches = false;\r\n\r\n      if (languageFilter) {\r\n        languageMatches = candidate.languages.some(\r\n          (language) => language.id === languageFilter\r\n        );\r\n      } else {\r\n        languageMatches = true;\r\n      }\r\n\r\n      if (experienceFilter === \"junior\") {\r\n        experienceMatches =\r\n          !candidate.beginYear ||\r\n          new Date().getFullYear() - candidate.beginYear < 3;\r\n      } else if (experienceFilter === \"senior\") {\r\n        experienceMatches =\r\n          candidate.beginYear &&\r\n          new Date().getFullYear() - candidate.beginYear >= 3;\r\n      } else {\r\n        experienceMatches = true;\r\n      }\r\n\r\n      if (searchFilter) {\r\n        searchMatches = candidate.name\r\n          .toLowerCase()\r\n          .includes(searchFilter.toLowerCase());\r\n      } else {\r\n        searchMatches = true;\r\n      }\r\n\r\n      return languageMatches && experienceMatches && searchMatches;\r\n    });\r\n\r\n    // Sort candidates by last update date in descending order\r\n    filtered.sort(\r\n      (a, b) => new Date(b.lastUpdateDate) - new Date(a.lastUpdateDate)\r\n    );\r\n\r\n    setFilteredCandidates(filtered);\r\n  }, [candidates, languageFilter, experienceFilter, searchFilter]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Candidate List\r\n          </Typography>\r\n          <TextField\r\n            label=\"Search\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onChange={(e) => setSearchFilter(e.target.value)}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"language-filter-label\">Language</InputLabel>\r\n            <Select\r\n              labelId=\"language-filter-label\"\r\n              id=\"language-filter\"\r\n              value={languageFilter}\r\n              onChange={(e) => setLanguageFilter(e.target.value)}\r\n              label=\"Language\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>All</em>\r\n              </MenuItem>\r\n              {languages.map((language) => (\r\n                <MenuItem key={language.id} value={language.id}>\r\n                  {language.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"experience-filter-label\">Experience</InputLabel>\r\n            <Select\r\n              labelId=\"experience-filter-label\"\r\n              id=\"experience-filter\"\r\n              value={experienceFilter}\r\n              onChange={(e) => setExperienceFilter(e.target.value)}\r\n              label=\"Experience\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>All</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"junior\">Junior</MenuItem>\r\n              <MenuItem value=\"senior\">Senior</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        {filteredCandidates.map((candidate) => (\r\n          <Grid item xs={12} sm={6} md={4} key={candidate.id}>\r\n            <Card className={classes.card}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {candidate.name}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {candidate.languages\r\n                    .map((language) => language.name)\r\n                    .join(\", \")}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {candidate.beginYear\r\n                    ? `Experience: ${\r\n                        new Date().getFullYear() - candidate.beginYear\r\n                      } years`\r\n                    : \"No experience\"}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Contact\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}